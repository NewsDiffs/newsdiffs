files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/run_supervised_scraper.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      scraper_name=scraper
      scraper_user=wsgi
      scraper_group=wsgi

      sudo mkdir -p /opt/python/run/$scraper_name/

      sudo chown -R $scraper_user:$scraper_group /opt/python/run/$scraper_name/

      # Get django environment variables
      environment=`cat /opt/python/current/env | tr '\n' ',' | sed 's/%/%%/g' | sed 's/export //g' | sed 's/$PATH/%(ENV_PATH)s/g' | sed 's/$PYTHONPATH//g' | sed 's/$LD_LIBRARY_PATH//g'`
      environment=${environment%?}

      program_name=${scraper_name}d
      supervisord_conf="[program:${program_name}]
      directory=/opt/python/current/app
      command=/opt/python/run/venv/bin/python continuous_scraper.py

      user=$scraper_user
      numprocs=1
      stdout_logfile=/opt/python/log/continuous_scraper.out
      stderr_logfile=/opt/python/log/continuous_scraper.err
      autostart=true
      autorestart=true
      startsecs=10

      ; Need to wait for currently executing tasks to finish at shutdown.
      ; Increase this if you have very long running tasks.
      stopwaitsecs = 60

      ; When resorting to send SIGKILL to the program to terminate it
      ; send SIGKILL to its whole process group instead,
      ; taking care of its children as well.
      killasgroup=true

      ; if rabbitmq is supervised, set its priority higher
      ; so it starts first
      priority=998

      environment=$environment"

      conf_file=${scraper_name}_supervisord.conf
      echo "$supervisord_conf" | tee /opt/python/etc/$conf_file

      # Add configuration script to supervisord conf (if not there already)
      # if ! grep -Fxq "[include]" /opt/python/etc/supervisord.conf
      #     then
      #     echo "[include]" | tee -a /opt/python/etc/supervisord.conf
      #     echo "files: $conf_file" | tee -a /opt/python/etc/supervisord.conf
      # fi

      # supervisorctl -c /opt/python/etc/supervisord.conf reread
      # supervisorctl -c /opt/python/etc/supervisord.conf update
      # supervisorctl -c /opt/python/etc/supervisord.conf restart ${program_name}
